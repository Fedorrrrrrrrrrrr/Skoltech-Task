# This is a basic workflow to help you get started with Actions
# workflow - цепочка действий
name: CMake Build 

# Controls when the action will run. Triggers the workflow on push
on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: "buildTest"
    config:
    - {
            name: "Windows Latest MinGW",
            os: windows-latest,
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }
#     runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
#     strategy:
#       fail-fast: false
#       matrix:
#         config:     
#         - {
#             name: "Windows Latest MinGW",
#             os: windows-latest,
#             build_type: "Release",
#             cc: "gcc",
#             cxx: "g++",
#             generators: "Ninja"
#           }       

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
        # cmd "${{ matrix.config.environment_script }}"      
          
      - name: Configure
        shell: bash
        run: |
          mkdir build
          mkdir instdir
          cmake \
            -S . \
            -B . \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir
      - name: Build
        shell: bash
        run: cmake --build . --config ${{ matrix.config.build_type }}

      - name: Install Strip
        shell: bash
        run: cmake --install . --strip

